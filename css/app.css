/* colores se pueden definir en base a un nombre, hexadecimal, RGB, HSL*/
/* añadir traasparencia con RGBA() y HSLA()
  color: rgb(0, 0, 0, .5) el valor final es de la trasparencia
*/

/* 
seudo selectores
    nav a:first-child o last-child {
        font-size: 20px;
    }

     nav a:nth-child() {
        font-size: 20px;
    }
*/


/*
    si selecionamos ej: nav .categoria, selecciona los la clase categoria de otro elemento que esta en el nav 
    pero si selecionamos nav.categoria seleccionamos la clase del nav es lo mismo a .categoria, que selecionamos los elementos que tengan esa clase

    nav a: es menos especifico que una clase y una clase es menos especifico que un id

*/


/*
    Box Model en CSS, todo es una caja pero como sea esa caja y que medidas tenga depende de 4 cosas: contenido, padding, borde y margin

    implementarlos puede afecar la creacion del css
    ejemplo: 

    .sobre-nosotros {
    background-color: red;
    white:200px;
    padding: 25px;
    box-sizing: border-box;  s
    
    i no ponemos border-box va a definir el tamaño sumando white y padding pero si lo aplicamos el padding va definir su tamaño con respecto al white
    
    }

*/

/*
    Display en css, todos los elementos html tienen un display 
    display-block el elemento se va a posicion abajo, ejemplo: etiqueta p
    display-inline, el elemento se posiciona a la derecha una vez que haya tomado el espacio que requiere. ejemplo etiqueta a
    display-inline-block, permite darle un white, height y margin, ejemplo etiqueta a
*/

/*
    Flexbox en CSS, fue diseñado como un modelo Unidemnsional para crear Layouts
    Se puede colocar o distribuir tus elementos en una direccion : ya sea fila (row) o columna (column)
    Row es aplicado por default al definir un display: flex; y mostrara los elementos ya sea de izquierda a derecha (row) o derecha a izquierda (row-reverse)
    sirve para aliniar

    alineacion en flexbox, permitira alinear los elementos de forma horizontal y vertical, justify-content y align-items

    si flex-direction es row se alinea con justify-content, si es column con aling-item
    si tengo un height se puede usar aling-item para alinear un elemento con flex-direcion row y llevarlo a donde queramos en la altura que tengamos
*/

/*
    Que es CSS Grid, te permite definir la ubicacion y el tamaño de tu sitio web

    flexbox es unidimensional (row o column), pero CSS Grid te permite distribuir elementos en ambas

    se habilita colocando display-grid;

    flexbox, el contenido crece automaticamente 
    CSS Grid, el contenido se agrupa dentro de un area definida 

Terminologia de CSS Grid 
Para crear columnas utilizamos grid-template-column 
Para crear rows o filas utilizamos grid-template-rows
Es posible definir un diseño con grid-template-areas

Grid lines: te nemos lineas con sus posiciones
Grid Track: parte media, puede ser horizontal o vertical
grid Cell : cuando aplicamos row y area tenemos celdas
Grid area: se habilita cuando utilizamos nombres o en el grid

*/


/*
Unidades en CSS, algunas propiedades en CSS requieren una unidad como son width, padding, margin, 

unidades relativas , toman su valor en base a otro elemento, em, rem, vh, vw y porcentaje 

tienen la ventaja de que se adaptan mejor a diferentes resoluciones y densidades de pixeles, lo cual lo hace la mejor opcion para la gran cantidad de dispositivos que utilizan los usuarios para navegar 


*/




/*
Formas de escribir CSS 
BEM - Block Element Modifier
.card{}
.card__titulo{}
.card_titulo--activo{}


Módulos CSS 
.card {}
. card h2 {}


Utilidades 

.text-center{}
.color-red-100{}
.bg-blue-200{}

SMACSS 
#header, #article, #footer{
    wdith: 900px;
    margin: auto;
}

#article {
    border: solid #CCC;
    border-width: 1px 0 0;
}




*/


/* 
Utiliza flexbox
para la alineacion o distribucion de los elementos que estaran dentro de contenedores

Utiliza CSS grid 
para definir el layout de tu sitio web, como pueden ser las columnas o contenedores de elementos


*/


html {

    box-sizing: border-box;
    font-size: 62.5%;
    /* 1 rem = a 10 pixeles*/
}

*,
*:before,
*:after {
    box-sizing: inherit;
}

body {
    font-family: 'Raleway', sans-serif;
    font-size: 1.6rem;
    line-height: 2;
}



/* Globales*/

h1,
h2,
h3 {
    font-family: 'Playfair Display', serif;
    margin: 0 0 5rem 0;
}

h1 {
    font-size: 5rem;
}

h2 {

    font-size: 4rem;
}

h3 {
    font-size: 3rem;
}

a {
    text-decoration: none;
    color: #000;
}

.contenedor {
    max-width: 120rem;
    margin: 0 auto;
}

img {
    max-width: 100%;
    /* Esto lo que hace es que si el div mide 300 la imagen aunque mida mas va a tomar el espacio que tiene el div*/
    display: block;
    /* el width cubre todo el ancho pero el falta altura por cubrir por eso usamos display: block*/
}

.btn {
    background-color: #8cbc00;
    display: block;
    /* Display: block hace que ocupe todo el ancho disponible*/
    color: #fff;
    text-transform: uppercase;
    font-weight: 900;
    padding: 1rem;
    transition: background-color .3s ease-out;
    text-align: center;
    /*tenemos una transicion que va animar el color de fondo le decimos la cantidad y el metodo */
    border: none;
}

.btn:hover {
    /*hover sirve para posicionarse sobre un elemento */
    cursor: pointer;
    background-color: #769c02;
}




/*Definimos Utilidades que usaremos en partes donde la necesitemos*/
/*UTILIDADES*/
.text-center {
    text-align: center;
}


.max-widht-30 {
    max-width: 30rem
}




/*Header y Navegacion*/


.nombre-sitio {
    margin-top: 5rem;

    text-align: center;

}

/*Anidar*/
.nombre-sitio span {

    color: #037bc0
}

.contenedor-navegacion {
    border-top: 1px solid #e1e1e1;
}

.nav-principal {
    padding: 1rem 0;
    display: flex;
    /*Con esto habilitamos flexbox en el elemento*/
    justify-content: space-between;

}

.submenu {
    position: relative;
    margin: 0;
}

.submenu #carrito {
    display: none;
    margin: 0;
}

.submenu:hover #carrito {
    display: block;
    position: absolute;
    right: 0;
    top: 100%;
    padding: 20px;
    min-width: 500px;
    min-height: 400px;
    background-color: #FFF;

}

.carrito-table {
    min-width: 100%;
    font-size: 1.6rem;
    font-weight: bold;
}

.carrito-table tr {
    display: flex;
    justify-content: space-between;
    border-bottom: 1px solid #e1e1e1;
    margin-bottom: 2rem;
    padding-bottom: 2rem;
}



.eliminar {
    border-radius: 50%;
    min-width: 4rem;
    min-height: 1rem;
    text-align: center;
    color: #FFF;
    background-color: #8cbc00;
    padding: .7rem;
    display: block;
    transition: background-color .3s ease-out;
}

.eliminar:hover {
    background-color: #769c02;
}

/*Hero*/
.hero {
    background-image: url(../img/principal.jpg);
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center center;
    /*Centra la imagen vertical y horizontalmente*/
    height: 55rem;
}


/* Categorias */

.categorias {
    padding-top: 5rem;
    /* si tengo un espacio abajo debo tener el mismo arriba*/
}




.categoria a {
    text-align: center;
    display: block;
    padding: 2rem;
    font-size: 2rem;
    /* las propiedades del text son para afectar todo el texto font es para afecta la fuente (hacerlo mas grande)*/
}


.categoria a:hover {
    background-color: #037bc0;
    color: #FFF;
    border-bottom-right-radius: 1rem;
}



.listado-categorias {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 2rem;
}

/*BLOQUE NOSOTROS*/

.sobre-nosotros {
    background-image: linear-gradient(to right, transparent 50%, #037bc0 50%, #037bc0 100%), url(../img/nosotros.jpg);
    /* primer valor ponemos la direcion y luego jugamos con el resto*/
    background-position: left center;
    padding: 10rem 0;
    background-repeat: no-repeat;
    background-size: 100%, 120rem;
    margin-top: 5rem;
}

.sobre-nosotros-grid {
    display: flex;
    justify-content: flex-end;
}

.texto-nosotros {
    flex-basis: 50%;
    padding-left: 10rem;
    color: #fff;
}

/* .sobre-nosotros-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    column-gap: 8rem;

}

.texto-nosotros {
    grid-column: 2 / 3;
} */







/** LISTADO DE PRODUCTOS */


.contenido-principal {
    padding-top: 5rem;
}

.listado-productos {
    display: grid;
    grid-template-columns: repeat(6, 1fr);
    gap: 2rem;
}


.producto:nth-child(1) {
    grid-column-start: 1;
    grid-column-end: 7;
    display: grid;
    grid-template-columns: 3fr 2fr;
}

.producto:nth-child(1) img {
    height: 43rem;
    width: 100%;
    object-fit: cover;
}






.producto:nth-child(2) {
    grid-column-start: 1;
    grid-column-end: 4;
}

.producto:nth-child(2) img,
.producto:nth-child(3) img {
    height: 30rem;
    width: 100%;
    object-fit: cover;
}


.producto:nth-child(3) {
    grid-column-start: 4;
    grid-column-end: 7;
}


.producto:nth-child(4) {
    grid-column-start: 1;
    grid-column-end: 3;
}

.producto:nth-child(5) {
    grid-column-start: 3;
    grid-column-end: 5;
}

.producto:nth-child(6) {
    grid-column-start: 5;
    grid-column-end: 7;
}


.producto {
    background-color: #037bc0;

}


.texto-producto {
    text-align: center;
    color: #fff;
    padding: 2rem;
}

.texto-producto h3 {
    margin: 0;
}

.texto-producto p {
    margin: 0 0 .5rem 0;
}


.texto-producto .precio {
    font-size: 2.8rem;
    font-weight: 900;
}


/*FOOTER*/

.site-footer {
    border-top: 1px solid #e1e1e1;
    margin-top: 5rem;
    padding-top: 5rem;
}

.site-footer h3 {
    margin-bottom: .5rem;
}

.grid-footer {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 2rem;
}



.footer-menu a {
    display: block;
}

.copyright {
    margin-top: 5rem;
    text-align: center;
}




/* 
.grid-footer {
    display: flex;
    gap: 2rem;
}

.grid-footer div{
    flex:1 ; /* Factor de crecimiento que va a tener un div, cuantas veces mas va a crecer con respecto a otro
} 
 */







/*Nosotros */

.contenedor-nosotros {
    display: grid;
    grid-template-columns: 1fr 2fr;
    grid-template-columns: repeat(auto-fit, minmax(50rem, 1fr));
    /*Si mide menos de 500 pexiles le asigna 1fr a cada uno*/
    column-gap: 4rem;
}

.informacion-nosotros {
    display: flex;
    flex-direction: column;
    justify-content: center;
}


/** Blog*/

.contenedor-blog {
    display: grid;
    grid-template-columns: 2fr 1fr;
    column-gap: 4rem;
}

.entrada {
    border-bottom: 2px solid #e1e1e1;
    padding-bottom: 4rem;
    margin-bottom: 2rem;
}

.entrada:last-of-type {
    border: none;
}

.entrada-meta {
    display: flex;
    justify-content: space-between;
}

.entrada-meta p {
    font-weight: 700;
}

.entrada-meta span {
    color: #037bc0;
}


/*Entrada Blog*/

.contenido-entrada-blog {
    width: 60rem;
    margin: 0 auto;
}


/** Galeria*/

.galeria {
    list-style: none;
    padding: 0;
    /*Elimina la franga que deja el puntito*/
    margin: 0;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 2rem;
}


.galeria img {
    height: 40rem;
    width: 40rem;
    object-fit: cover;
}


/*FORMULARIO*/

.formulario {
    max-width: 60rem;
    margin: 0 auto;
}

.formulario fieldset {
    border: 1px solid black;
    margin-bottom: 2rem;

}

.formulario legend {
    background-color: #005485;
    width: 100%;
    text-align: center;
    color: #FFF;
    text-transform: uppercase;
    font-weight: 900;
    padding: 1rem;
    margin-bottom: 4rem;
}


.campo {
    display: flex;
    margin-bottom: 2rem;
    flex-direction: column;

}

.input {
    display: flex;
}


.campo label {
    flex-basis: 10rem;

}


.campo input:not([type='radio']),
textarea,
select {
    flex: 1;
    border: 1px solid #e1e1e1;
    padding: 1rem;
}

.alerta-form {
    background-color: red;
    color: #FFF;
    padding: 1rem;
    text-align: center;
    font-size: 1.6rem;
    font-weight: bold;

}


.formulario .container-btn-form {
    display: flex;
    justify-content: space-between;
}

.btn-form {
    background-color: #8cbc00;
    display: block;
    /* Display: block hace que ocupe todo el ancho disponible*/
    color: #fff;
    text-transform: uppercase;
    font-weight: 900;
    padding: 1rem;
    transition: background-color .3s ease-out;
    text-align: center;
    /*tenemos una transicion que va animar el color de fondo le decimos la cantidad y el metodo */
    border: none;

}

.opacity {
    opacity: 0.5;
}

.btn-form:hover {
    /*hover sirve para posicionarse sobre un elemento */
    cursor: pointer;
    background-color: #769c02;
}


.btn-form-reset {
    background-color: #000;
    display: block;
    /* Display: block hace que ocupe todo el ancho disponible*/
    color: #fff;
    text-transform: uppercase;
    font-weight: 900;
    padding: 1rem;
    transition: background-color .3s ease-out;
    text-align: center;
    /*tenemos una transicion que va animar el color de fondo le decimos la cantidad y el metodo */
    border: none;

}

.btn-form-reset:hover {
    /*hover sirve para posicionarse sobre un elemento */
    cursor: pointer;
    background-color: #1a1a1a;
}


.alerta-exito {
    background-color: #8cbc00;
    color: #FFF;
    padding: 1rem;
    text-align: center;
    border-radius: .5rem;
    margin-top: 1rem;
    font-weight: bold;
    text-transform: uppercase;
}